@model PatientOverviewViewModel
@{
    ViewData["Title"] = "Patient Overview";
}

@section NavButtons {
    <a href="PatientLookUp" class="topnav-lbtn topnav-first">Patient Look-Up</a>

    <a href="Logout" class="topnav-rbtn">Logout</a>
    <a href="PatientLookUp" class="topnav-rbtn">@ViewBag.DoctorName</a>
}


<div class="sidebar">
    <div class="sidebar-body">
        <a href="PatientOverview" class="active">Overview</a>
        <!-- UPDATE HREF TO RECORDS PAGE -->
        <a href="PatientRecords">View Prescriptions</a>
    </div>
    <div class="sidebar-footer">
        <a href="PatientLookUp">Close</a>
    </div>
</div>

<div class="content">
    <div class="content-header">
        <h1>@(Model.PatientMetadata.FirstName+" "+Model.PatientMetadata.LastName)</h1>
        <p><strong>PHN: </strong>@Model.PatientAsset.ID</p>
    </div>
    <div class="content-body">
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h3>General Information</h3>
                    </div>
                    <div class="card-body">
                        <p><strong>Age: </strong>@Model.PatientAge</p>
                        <p><strong>Date of Birth: </strong>@Model.PatientAsset.DateOfBirth.ToLongDateString()</p>
                        <p>
                            <strong>Address: </strong>@(Model.PatientMetadata.Address + " " + Model.PatientMetadata.City +
" " + Model.PatientMetadata.Province + " " + Model.PatientMetadata.Postal)
                        </p>
                        <p><strong>Email: </strong>@Model.PatientMetadata.Email</p>
                        <p><strong>Phone: </strong>@Model.PatientMetadata.Phone</p>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Emergency Contact</h3>
                    </div>
                    <div class="card-body">
                        <p><strong>Name: </strong>@(Model.PatientMetadata.emerFirstName + " " + Model.PatientMetadata.emerLastName)</p>
                        <p><strong>Phone: </strong>@Model.PatientMetadata.emerPhone</p>
                        <p>
                            <strong>Address: </strong>@(Model.PatientMetadata.emerAddress + " " + Model.PatientMetadata.emerCity +
" " + Model.PatientMetadata.emerProvince + " " + Model.PatientMetadata.emerPostal)
                        </p>
                        <p><strong>Relationship: </strong>@Model.PatientMetadata.Relationship</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Allergies</h3>
                    </div>
                    <div class="card-body">
                        <!-- TODO: dynamically fill in list: name, phone, relationship to patient -->
                        @{ if (Model != null && Model.PatientMetadata != null && Model.PatientMetadata.Allergies != null)
                            {
                                string[] allergyArray = Model.PatientMetadata.Allergies.Split(',');
                                foreach (var allergy in allergyArray)
                                {
                                    <span class="badge badge-success">@allergy</span>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Daily Medications</h3>
                    </div>
                    <div class="card-body">
                        <!-- TODO: dynamically fill in list: name, phone, relationship to patient -->
                        @{ if (Model != null && Model.PatientMetadata != null && Model.PatientMetadata.Meds != null)
                            {
                                string[] medArray = Model.PatientMetadata.Meds.Split(',');
                                foreach (var med in medArray)
                                {
                                    <span class="badge badge-success">@med</span>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Medical History</h3>
                    </div>
                    <div class="card-body">
                        <!-- TODO: dynamically fill in list: name, phone, relationship to patient -->
                        @{ if (Model != null && Model.PatientMetadata != null && Model.PatientMetadata.MedHist != null)
                            {
                                string[] medHistArray = Model.PatientMetadata.MedHist.Split(',');
                                foreach (var item in medHistArray)
                                {
                                    <span class="badge badge-success">@item</span>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- TODO: Move this to a new cshtml page and create code in controller, also add code for test results -->
        <div class="row">
            <div class="form-reg col-sm-10 col-md-8 col-lg-7 col-xl-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Medical Records</h3>
                        <nav class="nav nav-pills nav-fill tab">
                            <button class="nav-item nav-link tablinks btn btn-secondary" style="border-radius: 1.25rem; margin: 0.5em;" onclick="openTab(event, 'doc_notes')" id="defaultOpen">Doctor's Notes</button>
                            <button class="nav-item nav-link tablinks btn btn-secondary" style="border-radius: 1.25rem; margin: 0.5em;" onclick="openTab(event, 'prescriptions')">Prescriptions</button>
                            <button class="nav-item nav-link tablinks btn btn-secondary" style="border-radius: 1.25rem; margin: 0.5em;" onclick="openTab(event, 'test_results')">Test Results</button>
                        </nav>
                    </div>
                    <div class="card-body" style="max-height: 75vh; overflow-y: scroll;">

                        <div id="doc_notes" class="tabcontent">
                            @if (Model != null && Model.DoctorNotes != null && Model.DoctorNotes.Any())
                            {
                                @foreach (var doctorNote in Model.DoctorNotes)
                                {
                                    <div class="record" align="left" style="border:2px; border-style:solid; border-color:#6c757d; padding-left: 1em; padding-right: 1em; padding-top: 1em; margin-bottom: 1em;">
                                        <h4>
                                            Date: @doctorNote.DateOfRecord.ToString("MMMM dd, yyyy")
                                        </h4>
                                        <p>
                                            <strong>Purpose of Visit:</strong> @doctorNote.PurposeOfVisit <br />
                                            <strong>Description:</strong> @doctorNote.Description <br />
                                            <strong>Final Diagnosis:</strong> @doctorNote.FinalDiagnosis <br />
                                            <strong>Further Instructions and General Precautions:</strong> @doctorNote.FurtherInstructions   <br />
                                            <strong>Doctor Visited:</strong> @doctorNote.DoctorName
                                        </p>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="record" align="left">
                                    <h4>
                                        No records shared.
                                    </h4>
                                    <p>
                                        No medical records to show.
                                    </p>
                                </div>
                            }
                        </div>

                        <div id="prescriptions" class="tabcontent">
                            @if (Model != null && Model.Prescriptions != null && Model.Prescriptions.Any())
                            {
                                @foreach (var prescription in Model.Prescriptions)
                                {
                                    <div class="record" align="left" style="border:2px; border-style:solid; border-color:#6c757d; padding-left: 1em; padding-right: 1em; padding-top: 1em; margin-bottom: 1em;">
                                        <h4>
                                            Date: @prescription.PrescribingDate.ToString("MMMM dd, yyyy")
                                        </h4>
                                        <p>
                                            <strong>Drug Prescribed:</strong> @prescription.DrugName <br />
                                            <strong>Concentration:</strong> @prescription.Concentration <br />
                                            <strong>Prescription Valid From/To:</strong> @prescription.StartDate.ToString("MMMM dd, yyyy") - @prescription.EndDate.ToString("MMMM dd, yyyy") <br />
                                            <strong>Total Number of Refills:</strong> @prescription.Refill <br />
                                            <strong>Substitutions Allowed:</strong> @prescription.Substitution.ToString() <br />
                                            <strong>Directions for Use:</strong> @prescription.DirectionForUse <br />
                                            <strong>Prescribing Doctor:</strong> @prescription.DoctorName
                                        </p>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="record" align="left">
                                    <h4>
                                        No records shared.
                                    </h4>
                                    <p>
                                        No medical records to show.
                                    </p>
                                </div>
                            }
                        </div>

                        <!-- TO DO: Fill in for TEST RESULTS, display file as a viewable/downloadable link-->
                        <div id="test_results" class="tabcontent">
                            <div class="record" align="left">
                                <h4>
                                    No records shared.
                                </h4>
                                <p>
                                    No medical records to show.
                                </p>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
    document.getElementById("defaultOpen").click();
        function openTab(evt, tabName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.className += " active";
        }</script>
}

