﻿@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model DoctorHomeViewModel
@{
    ViewData["Title"] = "Doctor Home";
}

@section NavButtons {
    <!-- L to R -->
    <a href="Home" class="topnav-lbtn topnav-first active">Home</a>
    @*<a href="PatientLookUp" class="topnav-lbtn">Patient Look-Up</a>*@
    <a href="PatientSignUp" class="topnav-lbtn">New Patient Sign-Up</a>
    <!-- R to L-->
    <a href="Logout" class="topnav-rbtn">Logout</a>
    <a href="Home" class="topnav-rbtn">Dr. @ViewBag.DoctorName</a>
}


<div class="jumbotron text-center" style="background:transparent !important">
    <br />
    <div class="big-text">
        Hello, Dr. @ViewBag.DoctorName
    </div>
    @*<h1>Welcome to MedNet Dr. @ViewBag.DoctorName</h1>*@
    <br />
    <p>To get started, please select an action.</p>
</div>

<div class="container">
    <div class="row">
        <div class="col-sm-6 stack">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">
                        <h1>Patient Look-Up</h1>
                    </div>
                    @Html.ValidationSummary(true)
                    <form asp-action="PatientLookUp" method="post">

                        <!-- PHN -->
                        <div class="form-group">
                            <label for="patientPhone">Personal Health Number</label>
                        @Html.TextBoxFor(n => n.PHN, new { id = "patient-look-up-PHN", placeholder = "####-###-###", title = "10-digit Personal Health Number", @required = "required", @class = "typeahead form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(n => n.PHN)
                        <small class="form-text text-muted">10-digit Personal Health Number can be found on the patient's CareCard/BC Services Card</small>
                        </div>
                        <button type="submit" id="submitButton" class="btn btn-success">Search</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-sm-6 stack">
            <div class="card border-0">
                <div class="card-body">
                    <h1 class="card-title">New Patient Sign-Up</h1>
                    <p class="card-text">To enroll a new patient onto MedNet, please continue to registration. Patients will need to provide their PHN to create a new account.</p>
                    <a href="PatientSignUp" class="btn btn-success">Register Patient</a>
                </div>
            </div>
        </div>
        <!-- Can add some documentation on how patient overview works, what adding records means/what types can u add, what requesting access means -->
    </div>
</div>

@section Scripts {
    <!-- jQuery -->
    <script src="~/theme/plugins/jquery/jquery.min.js"></script>
    <!-- InputMask -->
    <script src="~/theme/plugins/moment/moment.min.js"></script>
    <script src="~/theme/plugins/inputmask/min/jquery.inputmask.bundle.min.js"></script>
    <script src="~/Scripts/bloodhound.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.min.js"></script>
    <script type="text/javascript">
        jQuery(function ($) {
            $("#patient-look-up-PHN").inputmask("9999-999-999");
        });</script>

    <script>
        $(document).ready(function () {
            // Constructs the suggestion engine
            var patientIDs = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.ngram,
                queryTokenizer: Bloodhound.tokenizers.ngram,
                matchAnyQueryToken: true,
                // The url points to a json file that contains an array of country names
                prefetch: 'getAllPatientIDs'
            });

            // Initializing the typeahead with remote dataset without highlighting
            $('.typeahead').typeahead({
                items: 4,
                fitToElement: true,
                source: patientIDs.ttAdapter(),
                matcher: function (item) {
                    var it = this.displayText(item).toLowerCase();
                    var query = this.query.toLowerCase();
                    it=it.replace(/-/g, '');
                    query = query.replace(/-/g, '');
                    query = query.replace(/_/g, '');
                    return ~it.indexOf(query)
                }
                });
        });
    </script>
}